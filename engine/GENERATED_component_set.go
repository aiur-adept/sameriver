
//
//
// THIS FILE HAS BEEN GENERATED BY sameriver-generate
//
//
// DO NOT MODIFY BY HAND UNLESS YOU WANNA HAVE A GOOD TIME WHEN THE NEXT
// GENERATION DESTROYS WHAT YOU WROTE. UNLESS YOU KNOW HOW TO HAVE A GOOD TIME
//
//

package engine

import (
	"github.com/golang-collections/go-datastructures/bitarray"
)

type ComponentSet struct {
	Box            *Vec2D
	Logic          *LogicUnit
	Mass           *float64
	MaxVelocity    *float64
	MovementTarget *Vec2D
	Position       *Vec2D
	Sprite         *Sprite
	Steer          *Vec2D
	TagList        *TagList
	Velocity       *Vec2D
}

func (cs *ComponentSet) ToBitArray() bitarray.BitArray {
	b := bitarray.NewBitArray(uint64(N_COMPONENT_TYPES))
	if cs.Box != nil {
		b.SetBit(uint64(BOX_COMPONENT))
	}
	if cs.Logic != nil {
		b.SetBit(uint64(LOGIC_COMPONENT))
	}
	if cs.Mass != nil {
		b.SetBit(uint64(MASS_COMPONENT))
	}
	if cs.MaxVelocity != nil {
		b.SetBit(uint64(MAXVELOCITY_COMPONENT))
	}
	if cs.MovementTarget != nil {
		b.SetBit(uint64(MOVEMENTTARGET_COMPONENT))
	}
	if cs.Position != nil {
		b.SetBit(uint64(POSITION_COMPONENT))
	}
	if cs.Sprite != nil {
		b.SetBit(uint64(SPRITE_COMPONENT))
	}
	if cs.Steer != nil {
		b.SetBit(uint64(STEER_COMPONENT))
	}
	if cs.TagList != nil {
		b.SetBit(uint64(TAGLIST_COMPONENT))
	}
	if cs.Velocity != nil {
		b.SetBit(uint64(VELOCITY_COMPONENT))
	}
	return b
}

func (em *EntityManager) ApplyComponentSet(cs ComponentSet) func(*Entity) {
	b := cs.ToBitArray()
	return func(e *Entity) {
		e.ComponentBitArray = e.ComponentBitArray.Or(b)
		if cs.Box != nil {
			em.components.Box[e.ID] = *cs.Box
		}
		if cs.Logic != nil {
			em.components.Logic[e.ID] = *cs.Logic
		}
		if cs.Mass != nil {
			em.components.Mass[e.ID] = *cs.Mass
		}
		if cs.MaxVelocity != nil {
			em.components.MaxVelocity[e.ID] = *cs.MaxVelocity
		}
		if cs.MovementTarget != nil {
			em.components.MovementTarget[e.ID] = *cs.MovementTarget
		}
		if cs.Position != nil {
			em.components.Position[e.ID] = *cs.Position
		}
		if cs.Sprite != nil {
			em.components.Sprite[e.ID] = *cs.Sprite
		}
		if cs.Steer != nil {
			em.components.Steer[e.ID] = *cs.Steer
		}
		if cs.TagList != nil {
			em.components.TagList[e.ID] = *cs.TagList
		}
		if cs.Velocity != nil {
			em.components.Velocity[e.ID] = *cs.Velocity
		}
	}
}
